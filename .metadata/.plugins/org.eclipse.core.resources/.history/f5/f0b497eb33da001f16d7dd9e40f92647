package view;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.List;

import controlador.Orokorrak.GlobalData;
import controlador.servidor.Zerbitzaria;
import modelo.Reuniones;
import modelo.Users;

public class BileraV extends JFrame {
    private JTable table;
    private DefaultTableModel model;
    private JTextArea txtDetalles;

    public BileraV() {
        setTitle("Vista de Bilerak");
        setSize(800, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
        table.setDefaultEditor(Object.class, null); 
        table.setEnabled(false);

        String[] columnNames = {"Fecha", "Hora", "Estado", "Acci√≥n"};
        model = new DefaultTableModel(null, columnNames);
        table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        txtDetalles = new JTextArea();
        txtDetalles.setEditable(false);
        add(new JScrollPane(txtDetalles), BorderLayout.EAST);

        cargarReuniones();
    }

    private void cargarReuniones() {
        try (Socket socket = new Socket("10.5.104.41", Zerbitzaria.PUERTO);
             ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
             ObjectInputStream in = new ObjectInputStream(socket.getInputStream())) {

            out.writeObject("BILERA");
            out.writeObject(GlobalData.logedUser.getId());
            out.flush();

            String respuesta = (String) in.readObject();
            if ("OK".equals(respuesta)) {
                List<Reuniones> reuniones = (List<Reuniones>) in.readObject();
                for (Reuniones reunion : reuniones) {
                    model.addRow(new Object[]{
                            reunion.getFecha().toLocalDateTime().toLocalDate().toString(),
                            reunion.getFecha().toLocalDateTime().toLocalTime().toString(),
                            reunion.getEstado(),
                            "Ver detalles"
                    });
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error al obtener reuniones.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
